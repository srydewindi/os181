 /* (c) 2011-2017 Rahmat M. Samik-Ibrahim
 * This is free software. Feel free to copy and/or
 * modify and/or distribute it, provided this
 * notice, and the copyright notice, are preserved.
 * REV01 Wed May 17 17:02:37 WIB 2017
 * START Wed May 3 12:58:28 WIB 2017
 *
 * sem_init(), sem_wait(), sem_post(): semaphore
 * sleep(X): sleep X seconds
 * daftar_trit(T): register thread T
 * jalankan_trit(): start all registered threads.
 * beberes_trit(): exit all threads above. */
 #define jmlKIRI 3
 #define jmlKANAN 2
 #define SLEEP 1
 #include <stdio.h>
 #include <stdlib.h>
 #include <semaphore.h>
 #include <unistd.h>
 #include "99-myutils.h"
 sem_t mutexID, syncModKiri, syncModKanan;
 sem_t syncKiriMod, syncKananMod;
 int sequence = 0;

 void cetak(char* posisi) {
 sem_wait (&mutexID);
 printf("%s (%d)\n", posisi, sequence++);
 fflush(NULL);
 sem_post (&mutexID);
 sleep(SLEEP);
 }
 void* Kanan (void* a) {
 while (TRUE) {
 sem_wait (&syncModKanan);
 cetak("-+-+-+Kanan");
 sem_post (&syncKananMod);
 }
 }
 void* Kiri (void* a) {
 while (TRUE) {
 cetak("Kiri-+-+-+-");
 sem_post (&syncKiriMod);
 sem_wait (&syncModKiri);
 }
 }
 void* Moderator (void* a) {
 int ii;
 while (TRUE) {
 for (ii=0; ii<jmlKIRI; ii++)
 sem_wait (&syncKiriMod);
 for (ii=0; ii<jmlKANAN; ii++)
 sem_post (&syncModKanan);
 for (ii=0; ii<jmlKANAN; ii++)
 sem_wait (&syncKananMod);
 for (ii=0; ii<jmlKIRI; ii++)
 sem_post (&syncModKiri);
 }
 }
 int main(int argc, char * argv[]) {
 int ii;
 sem_init (&syncModKiri, 0, 0);
 sem_init (&syncModKanan, 0, 0);
 sem_init (&syncKiriMod, 0, 0);
 sem_init (&syncKananMod, 0, 0);
 sem_init (&mutexID, 0, 1);

 for (ii = 0 ; ii < jmlKANAN; ii++)
 daftar_trit(Kanan);
 for (ii = 0 ; ii < jmlKIRI; ii++)
 daftar_trit(Kiri);
 daftar_trit(Moderator);

 jalankan_trit();
 beberes_trit("Selese...");
 }
