#define MAX_THREAD 100
#define BUFFER_SIZE 5
#define TRUE 1
#define FALSE 0
typedef struct {
 int buffer[BUFFER_SIZE];
 int in;
 int out;
 int count;
} bbuf_t;
void daftar_trit (void* trit); // mempersiapkan "trit"
void jalankan_trit (void); // menjalankan dan menunggu hasil dari
 // "daftar_trit"
void beberes_trit (char* pesan); // beberes menutup "jalankan_trit"
void rehat_acak (long max_mdetik); // istirohat acak "0-max_mdetik" (ms)
void init_buffer (void); // init buffer
void enter_buffer (int entry); // enter an integer item
int remove_buffer (void); // remove the item
void init_rw (void); // init readers writers
int startRead (void); // start reading
int endRead (void); // end reading
void startWrite (void); // start writing
void endWrite (void); // end writing
#include <stdio.h>
#include <stdlib.h>
#include <semaphore.h>
#include "myutils.h"
sem_t mutex1, mutex2;
void* TRIT_satu (void* a) {
 sem_wait (&mutex1);
 printf("Ini TRIT satu\n");
}
void* TRIT_dua (void* a) {
 sem_wait (&mutex2);
 printf("Ini TRIT dua\n");
 sem_post (&mutex1);
}
void* TRIT_tiga (void* a) {
 printf("Ini TRIT tiga\n");
 sem_post (&mutex2);
} 

int main(int argc, char * argv[]) {
 sem_init (&mutex1, 0, 0);
 sem_init (&mutex2, 0, 0);
 daftar_trit(TRIT_satu);
 daftar_trit(TRIT_dua);
 daftar_trit(TRIT_tiga);
 jalankan_trit();
 beberes_trit("INDUK mohon diri");
} 
